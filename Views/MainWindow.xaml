<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

        x:Class="ChangeProperties.MainWindow"
        Title="Zmiana właściwości"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized">

    <Window.Resources>
        <BitmapImage x:Key="IptIcon" UriSource="Images/ipt.png"/>
        <BitmapImage x:Key="IamIcon" UriSource="Images/iam.png"/>

        <Style x:Key="ModernButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF515559"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF616569"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF666666"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF414549"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF444444"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4,2"/>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4,2"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#FFDDDDDD"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#FFCCE5FF"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                  Grid.Column="2"
                                  Focusable="False"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>


                                    <Border x:Name="ContentSite"
                                    Background="{TemplateBinding Background}"
                                    VerticalAlignment="Center"
                                    Padding="4,2">
                                        <ContentPresenter
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    IsHitTestVisible="False"/>
                                    </Border>

                                    <Path Grid.Column="1"
                                  Margin="0,0,4,0"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="Black"
                                  Width="8"
                                  Height="4"/>
                                </Grid>
                            </ToggleButton>

                            <Popup Name="Popup"
                           Placement="Bottom"
                           AllowsTransparency="False"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Grid MaxHeight="220"
                              MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border x:Name="DropDownBorder"
                                    Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6"
                                          SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="ToggleButton" Property="Background" Value="White"/>
                                <Setter TargetName="ContentSite" Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>

                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Path=IsSelected}" Value="True">
                    <Setter Property="Background" Value="#CCE5FF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#FFF0F0F0"/>
            <Setter Property="BorderBrush" Value="#FFB5B2B2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#FFF5F5F5"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="Cell"/>
        </Style>

  
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#FF515559"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>


    <Border CornerRadius="10" Background="#FFF0F0F0" 
            BorderBrush="#FFB5B2B2" BorderThickness="1"
            Margin="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <DataGrid x:Name="DynamicDataGrid" 
                      Grid.Row="1"
                      AutoGenerateColumns="False" 
                      HorizontalAlignment="Stretch" 
                      VerticalAlignment="Stretch" 
                      CanUserAddRows="False" 
                      CanUserDeleteRows="False"
                      FrozenColumnCount="2" 
                      ItemsSource="{Binding Rows}"
                      CellEditEnding="OnCellEditEnding"
                      PreviewMouseDown="DynamicDataGridPreviewMouseDown" 
                      EnableRowVirtualization="False"
                      TextOptions.TextFormattingMode="Display"
                      TextOptions.TextRenderingMode="ClearType"
                      RenderOptions.BitmapScalingMode="HighQuality"/>


            <Border Grid.Row="2" Background="#FFE0E0E0" CornerRadius="0,0,5,5"
                    BorderBrush="#FFB5B2B2" BorderThickness="1,0,1,1"
                    Padding="10,5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>


                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">

                        <TextBlock Text="Zablokowane kolumny:" 
                       VerticalAlignment="Center" 
                       Margin="10,0,5,0"/>

                        <Button x:Name="ToggleColumnsButton" 
                    Content="Ukryj" 
                    Margin="5,0"
                    Width="100" 
                    Height="30" 
                    Style="{StaticResource ModernButtonStyle}"
                    Click="ToggleColumnsButton_Click"/>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Content="Zapisz" 
                            Height="30" 
                            Width="100"
                            Margin="5,0" 
                            Command="{Binding SaveCommand}"
                            Style="{StaticResource ModernButtonStyle}"/>

                    </StackPanel>
                    
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>